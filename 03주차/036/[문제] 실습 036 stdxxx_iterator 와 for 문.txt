실습 036 stdxxx_iterator 와 for 문
제출 마감일 2023-05-04 2359
업로드 가능한 파일 수 3
제출 방식 개인
목적


이 실습은 stdistream_iterator, ostream_iterator 를 이용해 for 문 없이 콘솔 입출력을 연습해 봅니다.



설명


stdostream_iterator 는 extraction operator (  ) 를 사용하여 출력 스트림에 연속적인 값을 쓰는 이터레이터 (iterator) 입니다.



마찬가지로 stdistream_iterator 는 입력 스트림에서 특정 타입의 값을 추출하는 이터레이터 (iterator) 입니다.


표준 입력(stdcin) 으로부터 EOF 가 입력될 때 까지 정수를 입력 받아 출력하는 프로그램을 iterator 를 이용해서 작성해 봅시다.



EOF 참고

Clion 에서는 먼저 Help  Find Action...  Registry  run.processes.with.pty 옵션을 해제합니다.
프로그램을 실행 후 입력 값을 모두 입력 후 Ctrl+Z 키나 Ctrl+D  키를 눌러서 EOF를 입력해 보세요.
프로그램이 종료되지 않으면 키보드로 EOF 를 입력 후 엔터키를 눌러보세요.



먼저, 사용자의 입력을 저장할 stdvector 를 선언합니다.



stdvectorint vec;



표준 입력 스트림 (stdcin) 에서 입력 받을 iterator 를 선언합니다. 



stdistream_iteratorint cin_iter(stdcin);

stdistream_iteratorint eos;                          end of stream



eos 는 스트림의 마지막을 체크하는 용도로 사용됩니다.



입력 이터레이터로 stdvector 에 정수 값을 저장해 봅시다.



stdcopy(cin_iter, eos, stdback_inserter(vec));



stdcopy() 함수는 시작부터 끝 이터레이터까지 원소를 지정한 위치로 복사합니다.

즉, cin_iter 이터레이터가 가리키는 스트림의 시작부터 EOF 까지 정수 값을 순차적으로 지정한 위치로 복사합니다.

이때 stdback_inserter() 편의 함수의 도움을 받아 stdvector 의 끝에 정수를 추가합니다.





표준 출력 스트림 (stdcout) 에서 출력할 iterator 를 선언합니다. 



stdostream_iteratorint cout_iter(stdcout,  );



stdvector 에 저장된 정수 값을 표준 출력 (stdcout) 스트림으로 출력해 봅시다.



stdcopy(vec.begin(), vec.end(), cout_iter);



stdvector 의 시작부터 마지막까지 원소를 순차적으로 접근하여 출력 이터레이터가 가리키는 곳으로 값을 복사합니다.





문제


N 개의 정수를 입력 받아 오름차순으로 정렬하여 출력하는 프로그램을 작성하시오.

단, for, while 등의 반복문을 사용하지 마시오.





참고

stdsort() 함수를 이용하세요.




제출파일


iterator_without_for.cpp

36.csv



입력


N 개의 정수가 공백으로 구분되어 주어집니다.







출력


입력 받은 정수를 오름차순으로 정렬한 후, 각각 공백으로 구분하여 출력하시오.





입출력 예

입력                    	출력                      
3 4 2 1	1 2 3 4
5 8 7 6 1 3	1 3 5 6 7 8
2 0 4 6 9 8 1 5	0 1 2 4 5 6 8 9