실습 027 - remove elements in stdvector
제출 마감일 2023-04-30 2359
업로드 가능한 파일 수 2
제출 방식 개인




목적

이 실습은 stdvector 의 원소들 중 특정한 원소를 삭제하는 것을 연습합니다. 



설명

stdvector는 연속된 메모리 공간에 데이터를 저장합니다. 여기에 5개의 원소를 가진 벡터가 있습니다. 이 벡터에서 3번째 원소를 삭제하면 어떤 일이 일어날까요 다음과 같은 벡터가 주어집니다.



stdvectorint vec = {1, 2, 3, 4, 5};



3번째 원소를 삭제하면, 벡터의 원소는 {1, 2, 4, 5} 가 되며 크기는 4입니다.

다음과 같이 벡터의 멤버 함수를 이용하면 원소를 삭제할 수 있습니다.httpsyoutu.be2olsGf6JIkUt=2492



vec.erase(3번째 위치) 를 호출하면 3번째 원소를 삭제합니다.

vec.erase(3번째 위치, 5번째 위치) 를 호출하면, 3번째~4번째 위치를 삭제합니다.



위치에 대한 정보는 이터레이터 타입입니다. 따라서 다음과 같은 방법으로 위치 정보를 얻을 수 있습니다.



stdvectorint vec = {1, 2, 3, 4, 5};

auto start = vec.begin();

vec.erase(start+2);    벡터의 인덱스는 0부터 시작함, {1, 2, 4, 5}

vec.erase(start+1, start+3);   {1, 2, 4, 5}   -- {1, 5}

 

벡터의 멤버 함수 erase() 의 반환값은 삭제된 곳 다음 원소를 가리키는 이터레이터입니다.



stdvectorint vec = {1, 2, 3, 4, 5};

auto current = vec.erase(vec.begin()+2);

stdcout  current  stdendl;   4가 출력됨




문제

먼저 정수 타입을 저장하는 벡터가 주어집니다.
그런 다음 해당 벡터를 조작하는 명령 형식이 제공됩니다.

A 명령 형식은 벡터의 위치(인덱스)를 나타내는 정수가 제공되며, 명령을 수행하기 위해서는 주어진 벡터에서 해당 위치의 원소를 삭제해야 합니다.

B 명령 형식은 벡터의 값을 나타내는 정수가 제공됩니다.  명령을 수행하기 위해서는 주어진 벡터에서 해당 값을 가지는 원소를 모두 삭제해야 합니다.

명령의 실행 순서는 A명령, B명령 순이다.

참고
Erase-remove idiom
httpsyoutu.be2olsGf6JIkUt=2492  (해당 주제의 위치, 30초 정도)



입력

첫번째 줄에 벡터의 크기 N이 주어집니다. 두번째 줄에 N개의 정수가 주어집니다. 세번째 줄에는 A 명령 형식 정수 값 M 이 주어집니다. 네번째 줄에는 B 명령 형식 정수 값 O 가 주어집니다. 

0 = N = 100, 0 = M = 100, 0 = O = 10,000




출력

첫번째 줄에 벡터의 크기를 출력합니다.
두번째 줄에 벡터에 남아 있는 원소를 모두 출력합니다. 


제출파일

remove.cpp
27.csv


입출력

입력	출력
6                  
1 1 2 3 4 5
2
1	3
3 4 5
10
3 2 4 6 1 7 6 8 10 6
5
6	6
3 2 4 1 8 10 
3
3 2 1
0
2 
1 
1


힌트

Modern C++ 방식으로  #includealgorithm 에 있는 remove() 함수를 이용하여 컨테이너에서 특정 값을 가지는 원소를 삭제할 수 있습니다.


stdvectorint vec = {1, 2, 3, 4, 5};
stdremove( vec.begin(), vec.end(), 1 );    {2, 3, 4, 5}

